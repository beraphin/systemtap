@define __emitpriv
%(
    %( $1 == 1 %?
        private
    %)
%)

@__emitpriv global alpha, beta, gamma, iota, epsilon, phi

probe begin {
 gamma = "abcdefghijklmnopqrstuvwxyz"

 iota["one"] = "eleven"
 iota["two"] = "twelve"

 alpha["one",1] = 1
 alpha["one",2] = 2
 alpha["two",1] = 3
 alpha["two",2] = 4

 beta["one",1] = 1
 beta["one",2] = 2
 beta["two",1] = 3
 beta["two",2] = 4

 phi <<< 1
 phi <<< 2
 phi <<< 3
 phi <<< 4

 epsilon["one",1] <<< 1
 epsilon["one",1] <<< 2
 epsilon["one",1] <<< 3
 epsilon["one",1] <<< 4
 epsilon["two",2] <<< 10
 epsilon["two",2] <<< 20
 epsilon["two",2] <<< 30
 epsilon["two",2] <<< 40
}

probe timer.ms(100) {
  exit ()
}

probe end {
foreach ([i,j] in beta)
  printf("[%#s,%#x]=%#x ", i, j, beta[i,j])
print("\n")
foreach([i,j+] in epsilon)
  printf("epsilon[\"%s\", %d] count:%d min:%d max:%d sum:%d avg:%d\n",
          i, j, @count(epsilon[i,j]), @min(epsilon[i,j]), @max(epsilon[i,j]), @sum(epsilon[i,j]),
          @avg(epsilon[i,j]))
exit()
}

