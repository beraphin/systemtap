function utf16_addr:long() %{
    static u16 utf16_string[] = {
        0x73, 0x74, 0x61, 0x70, // "stap" (one-byte UTF-8 each)
        0x7F, 0x80,             // last one-byte, first two-byte
        0x391, 0x3A9,           // "Î‘Î©" (two-byte UTF-8 each)
        0x7FF, 0x800,           // last two-byte, first three-byte
        0x263A,                 // "â˜º" (three-byte UTF-8)
        0xFFFF, 0xD800, 0xDC00, // last three-byte, first four-byte
        0xD83D, 0xDE08,         // U+1F608 "ðŸ˜ˆ" (four-byte UTF-8)
        0xDBFF, 0xDFFF,         // last supported four-byte
        0
    };
    STAP_RETVALUE = (intptr_t)utf16_string;
%}

function utf32_addr:long() %{
    static u32 utf32_string[] = {
        0x73, 0x74, 0x61, 0x70, // "stap" (one-byte UTF-8 each)
        0x7F, 0x80,             // last one-byte, first two-byte
        0x391, 0x3A9,           // "Î‘Î©" (two-byte UTF-8 each)
        0x7FF, 0x800,           // last two-byte, first three-byte
        0x263A,                 // "â˜º" (three-byte UTF-8)
        0xFFFF, 0x10000,        // last three-byte, first four-byte
        0x1F608,                // "ðŸ˜ˆ" (four-byte UTF-8)
        0x10FFFF,               // last supported four-byte
        0
    };
    STAP_RETVALUE = (intptr_t)utf32_string;
%}

probe begin
{
  s = utf16_addr();
  for (p = s; i = kernel_short(p) & 0xffff; p += 2)
    printf("%X ", i)
  println(":")
  println(kernel_string_utf16(s))
  println(kernel_string_quoted_utf16(s))

  s = utf32_addr();
  for (p = s; i = kernel_int(p) & 0xffffffff; p += 4)
    printf("%X ", i)
  println(":")
  println(kernel_string_utf32(s))
  println(kernel_string_quoted_utf32(s))

  exit()
}

