# timerfd_gettime_____________________________________________
#
# SYSCALL_DEFINE2(timerfd_gettime, int, ufd, struct itimerspec __user *, otmr)
# COMPAT_SYSCALL_DEFINE2(timerfd_gettime, int, ufd,
#		struct compat_itimerspec __user *, otmr)

@define _SYSCALL_TIMERFD_GETTIME_NAME
%(
	name = "timerfd_gettime"
%)

@define _SYSCALL_TIMERFD_GETTIME_ARGSTR
%(
	argstr = sprintf("%d, %p", fd, value_uaddr)
%)

probe syscall.timerfd_gettime = dw_syscall.timerfd_gettime !,
                                nd_syscall.timerfd_gettime ? {}
probe syscall.timerfd_gettime.return = dw_syscall.timerfd_gettime.return !,
                                       nd_syscall.timerfd_gettime.return ? {}

# dw_timerfd_gettime _____________________________________________________

probe dw_syscall.timerfd_gettime = __syscall.timerfd_gettime ?,
	kernel.function("compat_sys_timerfd_gettime").call ?
{
	@_SYSCALL_TIMERFD_GETTIME_NAME
	fd = __int32($ufd)
	value_uaddr = @__pointer($otmr)
	@_SYSCALL_TIMERFD_GETTIME_ARGSTR
}
probe __syscall.timerfd_gettime = kernel.function("sys_timerfd_gettime").call ?
{
	@__syscall_gate_compat_simple
}
probe dw_syscall.timerfd_gettime.return = __syscall.timerfd_gettime.return ?,
	kernel.function("compat_sys_timerfd_gettime").return ?
{
	@_SYSCALL_TIMERFD_GETTIME_NAME
	retstr = return_str(1, $return)
}
probe __syscall.timerfd_gettime.return =
	kernel.function("sys_timerfd_gettime").return ?
{
	@__syscall_gate_compat_simple
}

# nd_timerfd_gettime _____________________________________________________

probe nd_syscall.timerfd_gettime = __nd_syscall.timerfd_gettime ?,
	kprobe.function("compat_sys_timerfd_gettime").call ?
{
	@_SYSCALL_TIMERFD_GETTIME_NAME
	asmlinkage()
	fd = int_arg(1)
	value_uaddr = pointer_arg(2)
	@_SYSCALL_TIMERFD_GETTIME_ARGSTR
}
probe __nd_syscall.timerfd_gettime =
	kprobe.function("sys_timerfd_gettime").call ?
{
	@__syscall_gate_compat_simple
}
probe nd_syscall.timerfd_gettime.return = __nd_syscall.timerfd_gettime.return ?,
	kprobe.function("compat_sys_timerfd_gettime").return ?
{
	@_SYSCALL_TIMERFD_GETTIME_NAME
	retstr = returnstr(1)
}
probe __nd_syscall.timerfd_gettime.return =
	kprobe.function("sys_timerfd_gettime").return ?
{
	@__syscall_gate_compat_simple
}
