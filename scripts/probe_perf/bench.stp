global process_hits
%( @2 == "NO_STAP_SDT" %?
probe process(@1).function("*").label("BENCH_PERMUTE")
{   process_hits <<< (get_cycles() - $cycles_start) }
%:
probe process(@1).mark("permute")
{   process_hits <<< (get_cycles() - $arg1) }
%)

global tower_hits
%( @2 == "NO_STAP_SDT" %?
probe process(@1).function("*").label("BENCH_TOWER")
{   tower_hits <<< (get_cycles() - $cycles_start) }
%:
probe process(@1).mark("tower")
{   tower_hits <<< (get_cycles() - $arg1) }
%)

global try_hits
%( @2 == "NO_STAP_SDT" %?
probe process(@1).function("*").label("BENCH_TRY")
{   try_hits <<< (get_cycles() - $cycles_start) }
%:
probe process(@1).mark("try")
{   try_hits <<< (get_cycles() - $arg1) }
%)

global innerproduct_hits
%( @2 == "NO_STAP_SDT" %?
probe process(@1).function("*").label("BENCH_INNERPRODUCT")
{   innerproduct_hits <<< (get_cycles() - $cycles_start) }
%:
probe process(@1).mark("innerproduct")
{   innerproduct_hits <<< (get_cycles() - $arg1) }
%)

global trial_hits
%( @2 == "NO_STAP_SDT" %?
probe process(@1).function("*").label("BENCH_TRIAL")
{   trial_hits <<< (get_cycles() - $cycles_start) }
%:
probe process(@1).mark("trial")
{   trial_hits <<< (get_cycles() - $arg1) }
%)

global quicksort_hits
%( @2 == "NO_STAP_SDT" %?
probe process(@1).function("*").label("BENCH_QUICKSORT")
{   quicksort_hits <<< (get_cycles() - $cycles_start) }
%:
probe process(@1).mark("quicksort")
{   quicksort_hits <<< (get_cycles() - $arg1) }
%)

global bubble_hits
%( @2 == "NO_STAP_SDT" %?
probe process(@1).function("*").label("BENCH_BUBBLE")
{   bubble_hits <<< (get_cycles() - $cycles_start) }
%:
probe process(@1).mark("bubble")
{   bubble_hits <<< (get_cycles() - $arg1) }
%)

global insert_hits
%( @2 == "NO_STAP_SDT" %?
probe process(@1).function("*").label("BENCH_INSERT")
{   insert_hits <<< (get_cycles() - $cycles_start) }
%:
probe process(@1).mark("insert")
{   insert_hits <<< (get_cycles() - $arg1) }
%)

global fft_hits
%( @2 == "NO_STAP_SDT" %?
probe process(@1).function("*").label("BENCH_FFT")
{   fft_hits <<< (get_cycles() - $cycles_start) }
%:
probe process(@1).mark("fft")
{   fft_hits <<< (get_cycles() - $arg1) }
%)
